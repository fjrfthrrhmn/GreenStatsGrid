# .github/workflows/auto-commit.yml
name: Auto Commit Daily

# Schedule: Random times with natural patterns
on:
  schedule:
    # Morning: 9-11 AM WIB (2-4 AM UTC) - 60% days
    - cron: '15 2 * * 1,2,4,5'     # Mon,Tue,Thu,Fri 9:15 AM WIB
    - cron: '45 3 * * 2,3,5'       # Tue,Wed,Fri 10:45 AM WIB
    
    # Afternoon: 1-3 PM WIB (6-8 AM UTC) - 40% days  
    - cron: '30 6 * * 1,3,4'       # Mon,Wed,Thu 1:30 PM WIB
    - cron: '15 7 * * 2,5'         # Tue,Fri 2:15 PM WIB
    
    # Evening: 5-7 PM WIB (10-12 PM UTC) - 30% days
    - cron: '45 10 * * 1,4'        # Mon,Thu 5:45 PM WIB
    - cron: '20 11 * * 3'          # Wed 6:20 PM WIB
    
  # Manual trigger untuk testing
  workflow_dispatch:

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Actions"
        
    - name: Check if should commit (probability)
      id: should_commit
      run: |
        # Random probability (30-70% chance)
        RANDOM_NUM=$((RANDOM % 100))
        THRESHOLD=60
        
        # Lower chance on Friday (40%)
        if [ $(date +%u) -eq 5 ]; then
          THRESHOLD=40
        fi
        
        # Very low chance on Monday (30%) 
        if [ $(date +%u) -eq 1 ]; then
          THRESHOLD=30
        fi
        
        echo "Random: $RANDOM_NUM, Threshold: $THRESHOLD"
        
        if [ $RANDOM_NUM -lt $THRESHOLD ]; then
          echo "should_commit=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Will commit today"
        else
          echo "should_commit=false" >> $GITHUB_OUTPUT  
          echo "‚è≠Ô∏è Skipping today"
        fi
        
    - name: Generate meaningful changes
      if: steps.should_commit.outputs.should_commit == 'true'
      run: |
        # Set timezone to WIB (UTC+7)
        export TZ='Asia/Jakarta'
        
        # Create/update activity log
        DATE=$(date '+%Y-%m-%d')
        TIME=$(date '+%H:%M:%S')
        WEEKDAY=$(date '+%A')
        
        # Create logs directory if not exists
        mkdir -p logs
        
        # Update daily activity log
        echo "## Activity Log - $DATE ($WEEKDAY) WIB" >> logs/daily-activity.md
        echo "- $TIME WIB: Automated maintenance and updates" >> logs/daily-activity.md
        echo "- Code review and documentation updates" >> logs/daily-activity.md
        echo "- Performance monitoring and optimization" >> logs/daily-activity.md
        echo "" >> logs/daily-activity.md
        
        # Update README with last activity
        if [ ! -f README.md ]; then
          cat > README.md << 'EOF'
        # Auto Commit Repository
        
        This repository demonstrates automated commit patterns using GitHub Actions.
        
        ## Features
        - Natural commit patterns
        - Automated documentation updates  
        - Daily activity logging
        - Safe probability-based commits
        
        ## Last Activity
        EOF
        fi
        
        # Update last activity in README
        sed -i '/## Last Activity/,$d' README.md
        echo "## Last Activity" >> README.md
        echo "- **Date**: $DATE" >> README.md
        echo "- **Time**: $TIME WIB" >> README.md
        echo "- **Status**: Active development" >> README.md
        
        # Random small updates
        UPDATES=(
          "docs: update documentation"
          "chore: maintenance and cleanup"  
          "feat: improve functionality"
          "refactor: code optimization"
          "style: formatting improvements"
          "fix: minor bug fixes"
          "perf: performance enhancements"
        )
        
        RANDOM_INDEX=$((RANDOM % ${#UPDATES[@]}))
        COMMIT_MSG="${UPDATES[$RANDOM_INDEX]} - $DATE"
        echo "COMMIT_MESSAGE=$COMMIT_MSG" >> $GITHUB_ENV
        
    - name: Commit and push changes
      if: steps.should_commit.outputs.should_commit == 'true'
      run: |
        git add .
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        git commit -m "$COMMIT_MESSAGE"
        
        # Push with retry mechanism
        for i in {1..3}; do
          if git push origin main; then
            echo "‚úÖ Successfully pushed on attempt $i"
            break
          else
            echo "‚ùå Push failed on attempt $i, retrying..."
            sleep 2
          fi
        done
        
        echo "‚úÖ Successfully committed: $COMMIT_MESSAGE"
        
    - name: Summary
      if: always()
      run: |
        # Set timezone to WIB
        export TZ='Asia/Jakarta'
        
        echo "ü§ñ Auto Commit Summary"
        echo "====================="
        echo "Date: $(date '+%Y-%m-%d %A')"
        echo "Time: $(date '+%H:%M:%S WIB')"
        echo "Should commit: ${{ steps.should_commit.outputs.should_commit }}"
        if [ "${{ steps.should_commit.outputs.should_commit }}" == "true" ]; then
          echo "Action: Commit made ‚úÖ"
        else
          echo "Action: Skipped ‚è≠Ô∏è"
        fi