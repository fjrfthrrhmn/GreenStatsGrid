name: Auto Commit Daily

on:
  schedule:
    # Morning (60% days)
    - cron: '15 9 * * 1,2,4,5'   # Mon, Tue, Thu, Fri
    - cron: '45 10 * * 2,3,5'    # Tue, Wed, Fri

    # Afternoon (40% days)
    - cron: '30 13 * * 1,3,4'    # Mon, Wed, Thu
    - cron: '15 14 * * 2,5'      # Tue, Fri

    # Evening (30% days)
    - cron: '45 17 * * 1,4'      # Mon, Thu
    - cron: '20 18 * * 3'        # Wed

  workflow_dispatch:

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "action@github.com"

      - name: Check if should commit (probability)
        id: should_commit
        run: |
          set -e
          RANDOM_NUM=$((RANDOM % 100))
          THRESHOLD=60

          if [ "$(date +%u)" -eq 5 ]; then
            THRESHOLD=40
          elif [ "$(date +%u)" -eq 1 ]; then
            THRESHOLD=30
          fi

          echo "Random: $RANDOM_NUM, Threshold: $THRESHOLD"

          if [ "$RANDOM_NUM" -lt "$THRESHOLD" ]; then
            echo "should_commit=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Will commit today"
          else
            echo "should_commit=false" >> $GITHUB_OUTPUT
            echo "‚è≠Ô∏è Skipping today"
          fi

      - name: Generate meaningful changes
        if: steps.should_commit.outputs.should_commit == 'true'
        run: |
          set -e
          DATE=$(date '+%Y-%m-%d')
          TIME=$(date '+%H:%M:%S')
          WEEKDAY=$(date '+%A')

          mkdir -p logs

          echo "## Activity Log - $DATE ($WEEKDAY)" >> logs/daily-activity.md
          echo "- $TIME: Automated maintenance and updates" >> logs/daily-activity.md
          echo "- Code review and documentation updates" >> logs/daily-activity.md
          echo "- Performance monitoring and optimization" >> logs/daily-activity.md
          echo "" >> logs/daily-activity.md

          if [ ! -f README.md ]; then
cat > README.md <<EOF
This repository demonstrates automated commit patterns using GitHub Actions.

- Natural commit patterns
- Automated documentation updates  
- Daily activity logging
- Safe probability-based commits

## Last Activity
EOF
          fi

          sed -i '/## Last Activity/,$d' README.md
          echo "## Last Activity" >> README.md
          echo "- **Date**: $DATE" >> README.md
          echo "- **Time**: $TIME UTC" >> README.md
          echo "- **Status**: Active development" >> README.md

          UPDATES=(
            "docs: update documentation"
            "chore: maintenance and cleanup"
            "feat: improve functionality"
            "refactor: code optimization"
            "style: formatting improvements"
            "fix: minor bug fixes"
            "perf: performance enhancements"
          )

          RANDOM_INDEX=$((RANDOM % ${#UPDATES[@]}))
          HASH=$(git rev-parse --short HEAD || echo $RANDOM)
          COMMIT_MESSAGE="${UPDATES[$RANDOM_INDEX]} - $DATE [$HASH]"
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Commit and push changes
        if: steps.should_commit.outputs.should_commit == 'true'
        run: |
          set -e
          git add .

          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "$COMMIT_MESSAGE"
          git pull --rebase origin main
          git push

          echo "‚úÖ Successfully committed: $COMMIT_MESSAGE"

      - name: Summary
        if: always()
        run: |
          echo "ü§ñ Auto Commit Summary"
          echo "====================="
          echo "Date: $(date '+%Y-%m-%d %A')"
          echo "Time: $(date '+%H:%M:%S UTC')"
          echo "Should commit: ${{ steps.should_commit.outputs.should_commit }}"
          if [ "${{ steps.should_commit.outputs.should_commit }}" == "true" ]; then
            echo "Action: Commit made ‚úÖ"
          else
            echo "Action: Skipped ‚è≠Ô∏è"
          fi
